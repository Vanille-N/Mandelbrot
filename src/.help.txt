This is the help file for the Mandelbrot creator.
It is not recommended to modify it.

<SCOPE>
Printing help for keyword `scope`

Universal scope:
    | scope {scope}
        change scope to {scope}
    | scope .
        reset scope (equivalent to `scope nil`)
    | {scope} {{scope}_cmd}
        temporary access to another scope
    | ~
        quit
    |
        do nothing
    | ?
        print help
    | /
        display next ls page

For more information:
cmd> nil ?
cmd> rec ?
cmd> make ?
cmd> map ?
cmd> save ?

or read LANGUAGE.md

<END>

<MAP>
Printing help for keyword `map`

`map` is used to choose the color scheme to be used.
All color schemes are used in the same way:
one point is colored with the corresponding RGB values modulus
the color map length. Any number of loops may show depending on
pixel resolution.
Color 0 is to be used for points that do not diverge.

Syntax:
    | .
        reset settings for scope `map`
        (equivalent to `0`)
    | {int}
        select map number {int}
    | ls
    | ls {int}
        show {int}'th page, default is 0.

For more information:
cmd> scope ?
or read LANGUAGE.md
<END>

<SAVE>
Printing help for keyword `save`

To avoid having to recreate all settings, files can be created
in order to restore environment to a previously set state.

Syntax:
    | #
        hash new unique filename and save settings.
    | '{str}
        create file named {str}, and use it to save settings
    | {int}
        load {int}'th file
    | ls
    | ls {int}
        show {int}'th page, default is 0

For more information:
cmd> scope ?
or read LANGUAGE.md
<END>

<REC>
Printing help for keyword `rec`

Change view rectangle.

Syntax:
    | .
        reset settings for `rec`
    | ls
        show current settings
    | ({selector}*{indicator}*{quantifier}*)*
        apply changes to the view

For more information:
cmd> scope ?
or read LANGUAGE.md
<END>

<MAKE>
Printing help for keyword `make`

Create image of the Mandelbrot set.

Syntax:
    | .
        reset `make` settings
    | ls
    | ls {int}
        show all files already created
        (page {int}, default 0)
    | {int}
        set resolution to {int}
    | #
        hash new name and create file
    | '{str}
        use {str} as name
    | {int} #
    | {int} '{str}
        execute sequentially as above

For more information:
cmd> scope ?
or read LANGUAGE.md
<END>

<NIL>
Root help

Syntax:
    | $y.$
        reset all settings
    | $y#$
        hash new name and create file
    | $y'$$r{str}$
        use $r{str}$ as name
    | $r{int}$
        open $r{int}$'th settings file
    | $yls$
    | $yls$ $r{int}$
        show all files already created
        (page $r{int}$, default 0)

For more information:
cmd> $yscope ?$
or read LANGUAGE.md
<END>
